{"version":3,"sources":["reducers/GameReducer.js","reducers/UserReducer.js","store.js","actions/UserAction.js","components/Login.jsx","containers/Login.js","components/Register.jsx","containers/Register.js","actions/GameAction.js","components/Square.jsx","components/Board.jsx","components/Status.jsx","components/Moves.jsx","components/Game.jsx","containers/Game.js","components/NavBar.jsx","components/Home.jsx","components/Root.jsx","containers/Root.js","serviceWorker.js","index.js"],"names":["initialState","squares","Array","fill","xIsNext","stepNumber","history","squaresWinner","haveWinner","content","oldSquaresWinner","calculateWinner","state","indexClick","result","temp","head1","head2","i","currentRow","Math","floor","nextPlayer","winner","push","shift","checkRow","checkColumn","checkSlash","checkBackSlash","clickSquare","slice","tempHistory","value","clickIndex","length","unshift","calculteResult","jumpToStepNumber","index","tempSquares","tempSquaresWinner","len","sort","reverse","GameReducer","action","type","payload","isAuthenticated","localStorage","getItem","account","username","email","err","UserReducer","setItem","messages","Store","createStore","combineReducers","applyMiddleware","logger","thunk","createBrowserHistory","setErrorMessage","fetchInfoUser","dispatch","fetch","method","credentials","then","res","status","json","rs","data","catch","message","UserAction","login","postFields","headers","body","JSON","stringify","postLogin","getInfoUser","logout","register","postRegister","Login","showErr","props","className","role","map","item","key","renderElement","to","onSubmit","handleSubmit","ref","placeholder","required","href","event","preventDefault","refs","password","this","Component","connect","postField","Register","retypeEmail","retypePassword","GameAction","createNewGame","Square","moreClassName","other","onClick","Board","arrRows","keys","cells","counter","row","toString","cellID","includes","Status","effect","Moves","col","clickPosition","desc","btnHighlight","Game","jumToStepNumber","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","element","Root","path","component","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.595b80a3.chunk.js","sourcesContent":["const initialState = {\r\n    squares: Array(400).fill(null),\r\n    xIsNext: true,\r\n    stepNumber: 0,\r\n    history: [],\r\n    squaresWinner: [],\r\n    haveWinner: false,\r\n    content: 'Increment',\r\n    oldSquaresWinner: []\r\n};\r\n\r\n// Kiểm tra hàng ngang\r\nfunction checkRow(state, indexClick){\r\n    let temp = 0;\r\n    let head1 = false;\r\n    let head2 = false;\r\n    let i = indexClick;\r\n    const currentRow = Math.floor(i / 20);\r\n    const { xIsNext, squares } = state;\r\n    const nextPlayer = xIsNext ? 'x' : 'o';\r\n    const winner = [];\r\n\r\n    while (temp < 5){\r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (Math.floor((i - 1) / 20) !== currentRow){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 5) && (squares[i - 1] === nextPlayer)){\r\n            head1 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i -= 1;\r\n    }\r\n\r\n    i = indexClick;\r\n    winner.shift();\r\n\r\n    while (temp < 6){\r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (Math.floor((i + 1) / 20) !== currentRow){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 6) && (squares[i + 1] === nextPlayer)){\r\n            head2 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i += 1;\r\n    }\r\n\r\n    if ((temp === 6) && !((head1 === true) && (head2 === true))){\r\n        return {\r\n            result: true,\r\n            squaresWinner: winner\r\n        }\r\n    }\r\n    \r\n    return {\r\n        result: false\r\n    };\r\n}\r\n\r\n// Kiểm tra hàng dọc\r\nfunction checkColumn(state, indexClick){\r\n    let temp = 0;\r\n    let head1 = false;\r\n    let head2 = false;\r\n    let i = indexClick;\r\n    const {xIsNext, squares} = state;\r\n    const  nextPlayer = xIsNext ? 'x' : 'o';\r\n    const winner = [];\r\n\r\n    while (temp < 5){\r\n        \r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (i - 20 < 0){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 5) && (squares[i - 20] === nextPlayer)){\r\n            head1 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i -= 20;\r\n    }\r\n\r\n    i = indexClick;\r\n    winner.shift();\r\n\r\n    while (temp < 6){\r\n        \r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (i + 20 > 399){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 6) && (squares[i + 20] === nextPlayer)){\r\n            head2 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i += 20;\r\n    }\r\n\r\n    if ((temp === 6) && !((head1 === true) && (head2 === true))){\r\n        return {\r\n            result: true,\r\n            squaresWinner: winner\r\n        }\r\n    }\r\n        \r\n    return {\r\n        result: false\r\n    }\r\n}\r\n\r\n// Kiểm tra đường chéo trái sang phải\r\nfunction checkSlash(state, indexClick){\r\n    let temp = 0;\r\n    let head1 = false;\r\n    let head2 = false;\r\n    let i = indexClick;\r\n    const {xIsNext, squares} = state;\r\n    const nextPlayer = xIsNext ? 'x' : 'o';\r\n    const winner = [];\r\n\r\n    while (temp < 5){\r\n        \r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (i - 21 < 0){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 5) && (squares[i - 21] === nextPlayer)){\r\n            head1 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i -= 21;\r\n    }\r\n\r\n    i = indexClick;\r\n    winner.shift();\r\n\r\n    while (temp < 6){\r\n        \r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (i + 21 > 399){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 6) && (squares[i + 21] === nextPlayer)){\r\n            head2 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i += 21;\r\n    }\r\n\r\n    if ((temp === 6) && !((head1 === true) && (head2 === true))){\r\n        return {\r\n            result: true,\r\n            squaresWinner: winner\r\n        }\r\n    }\r\n\r\n    return {\r\n        result: false\r\n    }\r\n}\r\n\r\n// Kiểm tra đường chéo phải sang trái\r\nfunction checkBackSlash(state, indexClick){\r\n    let temp = 0;\r\n    let head1 = false;\r\n    let head2 = false;\r\n    let i = indexClick;\r\n    const {xIsNext, squares} = state;\r\n    const nextPlayer = xIsNext ? 'x' : 'o';\r\n    const winner = [];\r\n\r\n    while (temp < 5){\r\n        \r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (i - 19 < 0){\r\n            head1 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 5) && (squares[i - 19] === nextPlayer)){\r\n            head1 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i -= 19;\r\n    }\r\n\r\n    i = indexClick;\r\n    winner.shift();\r\n\r\n    while (temp < 6){\r\n        \r\n        if (squares[i] === null){\r\n            break;\r\n        }\r\n\r\n        if (squares[i] === nextPlayer){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        temp += 1;\r\n\r\n        if (i + 19 > 399){\r\n            head2 = true;\r\n            break;\r\n        }\r\n\r\n        if ((temp === 6) && (squares[i + 19] === nextPlayer)){\r\n            head2 = true;\r\n        }\r\n\r\n        winner.push(i);\r\n        i += 19;\r\n    }\r\n\r\n    if ((temp === 6) && !((head1 === true) && (head2 === true))){\r\n        return {\r\n            result: true,\r\n            squaresWinner: winner\r\n        }\r\n    }\r\n        \r\n    return {\r\n        result: false\r\n    };\r\n}\r\n\r\n// Hàm tính toán xem người có người win không\r\n// Kiểm tra xem người chơi hiện tại có thắng không\r\nfunction calculateWinner(state, indexClick){\r\n    let result = checkRow(state, indexClick);\r\n\r\n    if (result.result){\r\n        return result;\r\n    }\r\n\r\n    result = checkColumn(state, indexClick);\r\n    if (result.result){\r\n        return result;\r\n    }\r\n\r\n    result = checkSlash(state, indexClick);\r\n    if (result.result){\r\n        return result;\r\n    }\r\n\r\n    return checkBackSlash(state, indexClick);\r\n}\r\n\r\n// Xử lí khi click một ô trên bàn cờ\r\nfunction clickSquare(state, i){\r\n    const { squares, xIsNext, content, history, stepNumber, haveWinner } = state;\r\n\r\n    // Nếu đã có người win thì không xử lí tiếp nữa\r\n    if(haveWinner){\r\n        return null;\r\n    }\r\n\r\n    const temp = squares.slice();\r\n    \r\n    // Nếu ô vừa click đã kích trước đó thì không xử lí nữa\r\n    if (temp[i] != null){\r\n        return null;\r\n    }\r\n\r\n    // Gán ký tự đại diện cho lượt người chơi vào ô được click\r\n    temp[i] = xIsNext? 'x' : 'o';\r\n    let tempHistory = [];\r\n\r\n    // Nếu danh sách nước đi đang được sắp xếp tăng dần...\r\n    if (content === 'Increment')\r\n    {\r\n        // Chèn nước đi với vào cuối danh sách nước đi\r\n        tempHistory = history.slice(0, stepNumber);\r\n        tempHistory.push({\r\n            value: temp[i],\r\n            clickIndex: i,\r\n            stepNumber\r\n        });\r\n    // Ngược lại thì...\r\n    }else{\r\n        // Chèn nước đi vào đầu danh sách nước đi\r\n        tempHistory = history.slice(history.length - stepNumber);\r\n        tempHistory.unshift({\r\n            value: temp[i],\r\n            clickIndex: i,\r\n            stepNumber\r\n        });\r\n    }\r\n\r\n    // Kết quả state tạm thời\r\n    const result = {\r\n        squares: temp,\r\n        xIsNext: !xIsNext,\r\n        history: tempHistory,\r\n        stepNumber: stepNumber + 1\r\n    };\r\n\r\n    const calculteResult = calculateWinner({...result}, i);\r\n    \r\n    if (calculteResult.result){\r\n        result.haveWinner = true;\r\n        result.squaresWinner = calculteResult.squaresWinner;\r\n        result.oldSquaresWinner = calculteResult.squaresWinner;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction jumpToStepNumber(state, index){\r\n    const tempSquares = Array(400).fill(null);\r\n    const { history, content, oldSquaresWinner, haveWinner, xIsNext } = state;\r\n    let tempSquaresWinner = [];\r\n    \r\n    if (content === 'Increment'){\r\n        for (let i = 0; i < index + 1; i += 1){\r\n            tempSquares[history[i].clickIndex] = history[i].value;\r\n        }\r\n\r\n        if (index === history.length - 1){\r\n            tempSquaresWinner = oldSquaresWinner;\r\n        }\r\n\r\n        let temp = history[index].value !== 'x';\r\n        temp = haveWinner? xIsNext : temp;\r\n\r\n        return ({\r\n            squares: tempSquares,\r\n            stepNumber: index + 1,\r\n            xIsNext: temp,\r\n            squaresWinner: tempSquaresWinner\r\n        });\r\n    }\r\n\r\n    const len = history.length;\r\n\r\n    for (let i = 0; i < index + 1; i += 1){\r\n        tempSquares[history[len - i - 1].clickIndex] = history[len - i - 1].value;\r\n    }\r\n    \r\n    if (history.length - index - 1 === 0){\r\n        tempSquaresWinner = oldSquaresWinner;\r\n    }\r\n\r\n    let temp = history[len - index - 1].value !== 'x';\r\n    temp = haveWinner? xIsNext : temp;\r\n\r\n\r\n    return ({\r\n        squares: tempSquares,\r\n        stepNumber: index + 1,\r\n        xIsNext: temp,\r\n        squaresWinner: tempSquaresWinner\r\n    });\r\n}\r\n\r\nfunction sort(state){\r\n    const { content, history } = state;\r\n\r\n    if (content === 'Increment'){\r\n        return ({\r\n            history: history.reverse(),\r\n            content: 'Decrement'\r\n        });\r\n    }\r\n\r\n    return ({\r\n        history: history.reverse(),\r\n        content: 'Increment'\r\n    });\r\n}\r\n\r\nconst GameReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case 'NEW_GAME':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case 'CLICK_SQUARE':\r\n            return {\r\n                ...state,\r\n                ...clickSquare(state, action.payload)\r\n            };\r\n        case 'JUMP':\r\n            return {\r\n                ...state,\r\n                ...jumpToStepNumber(state, action.payload)\r\n            };\r\n        case 'SORT':\r\n            return {\r\n                ...state,\r\n                ...sort(state)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default GameReducer;","const initialState = {\r\n    isAuthenticated: localStorage.getItem('isAuthenticated'),\r\n    account: localStorage.getItem('account'),\r\n    username: localStorage.getItem('username'),\r\n    email: localStorage.getItem('email'),\r\n    err: localStorage.getItem('err')\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case 'LOGIN_SUCCESS':{\r\n            localStorage.setItem('isAuthenticated', true);\r\n            return  {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                err: []\r\n            };\r\n        }\r\n\r\n        case 'INFO_SUCCESS':{\r\n            localStorage.setItem('account', action.payload.account);\r\n            localStorage.setItem('username', action.payload.username);\r\n            localStorage.setItem('email', action.payload.email);\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }    \r\n        }\r\n\r\n        case 'LOGOUT_SUCCESS': {\r\n            localStorage.setItem('isAuthenticated', \"\");\r\n            return {\r\n                ...state,\r\n                isAuthenticated: null,\r\n                err: []\r\n            } \r\n        }\r\n\r\n        case 'UPDATE_ERR':\r\n            return {\r\n                ...state,\r\n                err: [...action.payload.messages]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default UserReducer;","import { createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport GameReducer  from './reducers/GameReducer';\r\nimport UserReducer from './reducers/UserReducer';\r\n\r\n// eslint-disable-next-line import/imports-first\r\nimport 'babel-polyfill';\r\n\r\nconst Store = createStore(\r\n    combineReducers({ \r\n        GameReducer, \r\n        UserReducer \r\n    }),\r\n    applyMiddleware(logger, thunk)\r\n);\r\n\r\nexport default Store;","import fetch from 'cross-fetch';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction setErrorMessage(messages){\r\n    return {\r\n        type: 'UPDATE_ERR',\r\n        payload: {\r\n            messages: [...messages]\r\n        }\r\n    };\r\n}\r\n\r\nfunction logout(){\r\n    return dispatch => {\r\n        fetch('https://caro-backend.herokuapp.com/user/logout', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(res => {\r\n            if (res.status !== 200){\r\n                return dispatch(setErrorMessage(['Something is wrong. Please try later!'])); \r\n            }\r\n\r\n            dispatch({type: 'LOGOUT_SUCCESS'});\r\n            return history.push('/');\r\n        }).catch(err => {\r\n            return dispatch(setErrorMessage([err.message]));\r\n        });\r\n    }\r\n}\r\n\r\nfunction  fetchInfoUser() {\r\n    return dispatch => {\r\n        fetch('https://caro-backend.herokuapp.com/me', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        }).then(res => {\r\n            if (res.status !== 200){\r\n                return dispatch(setErrorMessage(['Something is wrong. Please try later!'])); \r\n            }\r\n\r\n            return res.json();\r\n        }).then(rs => {\r\n            return dispatch({ \r\n                type: 'INFO_SUCCESS',\r\n                payload: {\r\n                    ...rs.data\r\n                }\r\n            });\r\n        }).catch(err => {\r\n            return dispatch(setErrorMessage([err.message]));\r\n        });\r\n    }\r\n}\r\n\r\nfunction postLogin(postFields){\r\n    return dispatch => {\r\n        fetch('https://caro-backend.herokuapp.com/user/login', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers:{\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n            body: JSON.stringify(postFields)\r\n        }).then((res) => {\r\n            if (res.status === 200){\r\n                dispatch({ type: 'LOGIN_SUCCESS' });\r\n                return dispatch(fetchInfoUser());\r\n            }\r\n\r\n            res.json()\r\n                .then((data) => dispatch(setErrorMessage([...data.messages])))\r\n                .catch(err => dispatch(setErrorMessage([err.message])));\r\n            }\r\n        ).catch(err => dispatch(setErrorMessage([err.message])));\r\n    }\r\n}\r\n\r\nfunction postRegister(postFields){\r\n    return dispatch => {\r\n        fetch('https://caro-backend.herokuapp.com/user/register', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers:{\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n            body: JSON.stringify(postFields)\r\n        }).then((res) => {\r\n            if (res.status === 200){\r\n                dispatch({ type: 'LOGIN_SUCCESS' });\r\n                return dispatch(fetchInfoUser());\r\n            }\r\n\r\n            res.json()\r\n                .then((data) => dispatch(setErrorMessage([...data.messages])))\r\n                .catch(err => dispatch(setErrorMessage([err.message])));\r\n            }\r\n        ).catch(err => dispatch(setErrorMessage([err.message])));\r\n    }\r\n}\r\n\r\nconst UserAction = {\r\n    login: (postFields) => postLogin(postFields),\r\n    getInfoUser: () => fetchInfoUser(),\r\n    setErrorMessage: (messages) => setErrorMessage(messages),\r\n    logout: () => logout(),\r\n    register: (postFields) => postRegister(postFields)\r\n}\r\n\r\nexport default UserAction;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n// eslint-disable-next-line import/no-unresolved\r\nimport '../css/Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n    showErr = () => {\r\n        const { err } = this.props;\r\n\r\n        if (err && err.length !== 0){\r\n            return  (\r\n                <div className=\"alert alert-danger m-4 p-1\" role=\"alert\">\r\n                    {\r\n                        err.map((item, index) => (<div key={index}>{item}<br/></div>))\r\n                    }\r\n                </div>  \r\n            )\r\n        }\r\n    }\r\n\r\n    renderElement = () => {\r\n        const { isAuthenticated } = this.props;\r\n        if (isAuthenticated){\r\n            return <Redirect to='/'/>\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row h-100 my-auto\">\r\n                    <div className=\"card card-block mx-auto\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Login</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-user\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"account\" type=\"text\" className=\"form-control\" placeholder=\"Account\" required/>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Password\" required/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button type=\"submit\" className=\"btn float-right login_btn\">\r\n                                        Login\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        \r\n                        {this.showErr()}\r\n                        <div className=\"card-footer\">\r\n                            <div className=\"d-flex justify-content-center links\">\r\n                                Don&#39;t have an account?<a href=\"/user/register\">Register</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const postFields = {\r\n            account: this.refs.account.value,\r\n            password: this.refs.password.value\r\n        }\r\n        const { login } = this.props;\r\n        login(postFields);\r\n\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        return this.renderElement();\r\n    }\r\n}\r\n\r\nexport default Login;","import { connect } from 'react-redux';\r\nimport UserAction from '../actions/UserAction';\r\nimport Login from '../components/Login';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        err: state.UserReducer.err\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (postField) => {\r\n        dispatch(UserAction.login(postField));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n\r\n    showErr = () => {\r\n        const { err } = this.props;\r\n\r\n        if (err && err.length !== 0){\r\n            return  (\r\n                <div className=\"alert alert-danger m-4 p-1\" role=\"alert\">\r\n                    {\r\n                        err.map((item, index) => (<div key={index}>{item}<br/></div>))\r\n                    }\r\n                </div>  \r\n            )\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { register, setErrorMessage } = this.props;\r\n        const { account, username, email, retypeEmail, password, retypePassword } = this.refs;\r\n        \r\n        if (email.value !== retypeEmail.value){\r\n            setErrorMessage(['Email and confirm email does not match.'])\r\n            return false;\r\n        }\r\n\r\n        if (retypePassword.value !== password.value){\r\n            setErrorMessage(['Password and confirm password does not match.']);\r\n            return false;\r\n        }\r\n        \r\n        const postFields = {\r\n            account: account.value,\r\n            username: username.value,\r\n            email: email.value,\r\n            password: password.value,\r\n        }\r\n\r\n        register(postFields);\r\n    \r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        const { isAuthenticated } = this.props;\r\n\r\n        if (isAuthenticated){\r\n            return <Redirect to='/'/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row h-100 my-auto\">\r\n                    <div className=\"card card-block mx-auto\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Register</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {this.showErr()}\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-user\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"account\" type=\"text\" className=\"form-control\" placeholder=\"Account\" required/>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-file-signature\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Username\" required/>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-envelope\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"email\" type=\"email\" className=\"form-control\" placeholder=\"Email\" required/>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-envelope\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"retypeEmail\" type=\"email\" className=\"form-control\" placeholder=\"Confirm email\" required/>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Password\" required/>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"/></span>\r\n                                    </div>\r\n                                    <input ref=\"retypePassword\" type=\"password\" className=\"form-control\" placeholder=\"Confirm password\" required/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button type=\"submit\" className=\"btn float-right login_btn\">\r\n                                        Register\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <div className=\"d-flex justify-content-center links\">\r\n                                Have an account?<a href=\"/user/login\">Login</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import { connect } from 'react-redux';\r\nimport UserAction from '../actions/UserAction';\r\nimport Register from '../components/Register';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        err: state.UserReducer.err\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    register: (postField) => {\r\n        dispatch(UserAction.register(postField));\r\n    },\r\n\r\n    setErrorMessage: (messages) => {\r\n        dispatch(UserAction.setErrorMessage(messages));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","const GameAction = {\r\n    createNewGame: () => ({\r\n        type: 'NEW_GAME',\r\n        payload: {\r\n            squares: Array(400).fill(null),\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n            history: [],\r\n            squaresWinner: [],\r\n            haveWinner: false,\r\n            oldSquaresWinner: []\r\n        }\r\n    }),\r\n\r\n    clickSquare: (i) => ({\r\n        type: 'CLICK_SQUARE',\r\n        payload: i\r\n    }),\r\n\r\n    jumpToStepNumber: (i) => ({\r\n        type: 'JUMP',\r\n        payload: i\r\n    }),\r\n\r\n    sort: () => ({ type: 'SORT' })\r\n};\r\n\r\nexport default GameAction;","import React from 'react';\r\n\r\nconst Square = (props) => {\r\n    const {value, moreClassName, ...other} = props;\r\n    return (\r\n         <button type=\"button\" className={`square ${value} ${moreClassName}`} onClick={() => other.onClick()}>\r\n            {value}\r\n         </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = (props) => {\r\n    const arrRows = [...Array(20).keys()];\r\n    const { cells, squares, squaresWinner, ...other } = props;\r\n    let counter = 1;\r\n    return (\r\n        <div className=\"board\">\r\n            {\r\n                arrRows.map((row) => \r\n                    <div key={row.toString()} className=\"board-row\">\r\n                        {\r\n                            // eslint-disable-next-line no-plusplus\r\n                            cells.slice(row * 20, counter++ * 20)\r\n                                .map((cellID) =>\r\n                                    <Square key={cellID.toString()}\r\n                                            value={squares[cellID]}\r\n                                            moreClassName={squaresWinner.includes(cellID)? 'winner' : ''}\r\n                                            onClick={() => other.onClick(cellID)}/>\r\n                                )\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n\r\nconst Status = (props) => {\r\n    const {xIsNext, haveWinner} = props;\r\n    const effect = haveWinner? 'bounce' : '';\r\n    let status;\r\n\r\n    if (haveWinner){\r\n        status = `Winner is: ${xIsNext? 'o' : 'x'}`;\r\n    }else{\r\n        status = `Next player is: ${xIsNext? 'x' : 'o'}`;\r\n    }\r\n\r\n    return (  \r\n        <div className=\"game-info__status\">\r\n            <div className={`status ${effect}`}>{status}</div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Status;","import React from 'react';\r\n\r\nconst Moves = (props) => {\r\n    const {history, stepNumber, content, ...other} = props;\r\n    return ( \r\n        <div className=\"game-info__moves overflow-auto\">\r\n            <ol className=\"list-moves list-unstyled\">\r\n                <li>\r\n                    <button type=\"button\" className=\"btn btn-danger btn-block btn-text-big\"\r\n                            onClick={() => other.createNewGame()}>\r\n                        New game\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                <button type=\"button\" className=\"btn btn-danger btn-block btn-text-big\"\r\n                            onClick={() => other.sort()}>\r\n                        {\r\n                            content\r\n                        }\r\n                    </button>\r\n                </li>\r\n                {\r\n                    history.map((item)=>{\r\n                        const col = item.clickIndex % 20;\r\n                        const row = Math.floor(item.clickIndex / 20);\r\n                        const clickPosition = `(row: ${row}, col: ${col})`;\r\n                        const desc = `Go to move #${item.stepNumber}${clickPosition}`;\r\n                        const btnHighlight = (item.stepNumber === stepNumber - 1) ? 'btn-primary' : 'btn-secondary';\r\n                        return (\r\n                            <li key={item.stepNumber}>\r\n                                <button type=\"button\" \r\n                                        className={`btn ${btnHighlight} btn-block btn-custom`}\r\n                                        onClick={() => other.onClick(item.stepNumber)}>\r\n                                    {desc}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Moves;","import React from 'react';\r\nimport Board from './Board';\r\nimport Status from './Status'\r\nimport Moves from './Moves';\r\n\r\nimport '../css/App.css';\r\n\r\nconst Game = (props) => {\r\n    const cells = [...Array(400).keys()];\r\n    const { squares, squaresWinner, xIsNext, haveWinner, history, stepNumber, content, ...other } = props;\r\n\r\n    return(\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n                <Board cells={cells} \r\n                        squares={squares}\r\n                        squaresWinner={squaresWinner}\r\n                        onClick={other.clickSquare}/>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <Status xIsNext={xIsNext}\r\n                        haveWinner={haveWinner}/>\r\n                <Moves createNewGame={other.createNewGame}\r\n                        history={history}\r\n                        stepNumber={stepNumber}\r\n                        onClick={other.jumToStepNumber}\r\n                        content={content}\r\n                        sort={other.sort} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import { connect } from 'react-redux';\r\nimport GameAction from '../actions/GameAction';\r\nimport Game from '../components/Game';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {...state.GameReducer};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    createNewGame: () => {\r\n        dispatch(GameAction.createNewGame());\r\n    },\r\n\r\n    clickSquare: (i) => {\r\n        dispatch(GameAction.clickSquare(i));\r\n    },\r\n\r\n    jumToStepNumber: (i) => {\r\n        dispatch(GameAction.jumpToStepNumber(i));\r\n    },\r\n\r\n    sort: () => {\r\n        dispatch(GameAction.sort());\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React, { Component } from 'react';\r\n\r\nimport '../css/NavBar.css';\r\n\r\nclass NavBar extends Component {\r\n\r\n    renderElement = () => {\r\n        const { isAuthenticated, account, username, email, logout } = this.props;\r\n        if (isAuthenticated){\r\n            return (\r\n                <ul className=\"nav navbar-nav navbar-right r-5\">\r\n                    <li className=\"nav-item dropdow r-3\">\r\n                        <a href=\"/#\" className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            <span className=\"fas fa-user-tie\"/> &nbsp;  \r\n                            <strong>{account}</strong>\r\n                        </a>\r\n                        <ul className=\"dropdown-menu dropdown-menu-right\">\r\n                            <li>\r\n                                <div className=\"navbar-login\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-4\">\r\n                                            <p className=\"text-center\">\r\n                                                <span className=\"fas fa-user-tie icon-size\"/>\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8\">\r\n                                            <p className=\"text-left text-wrap\"><strong>{username}</strong></p>\r\n                                            <p className=\"text-left small text-wrap\">{email}</p>\r\n                                            {/* <p className=\"text-left\">\r\n                                                <a href=\"/\" className=\"btn btn-primary btn-block btn-sm\">Info</a>\r\n                                            </p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"navbar-login navbar-login-session\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <p>\r\n                                                <button onClick={() => logout()} className=\"btn btn-danger btn-block\" type=\"button\">Logout</button>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ul className=\"nav navbar-nav navbar-right r-5\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/user/register\" className=\"btn btn-outline-success mr-2\" >Don&#39;t have an account?</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/user/login\" className=\"btn btn-outline-success\">Login</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">CARO</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"/>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/game\">Game</a>\r\n                    </li>\r\n                </ul>\r\n                {this.renderElement()}\r\n            </div>\r\n        </nav>\r\n    );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport '../css/Home.css';\r\n\r\nconst Home = (props) => {\r\n\r\n    const { isAuthenticated } = props;\r\n    let element;\r\n\r\n    if (isAuthenticated){\r\n        element = null;\r\n    }\r\n    else{\r\n        element = <a className=\"btn btn-primary btn-xl text-uppercase js-scroll-trigger btn-primary-yellow\" href=\"/user/login\">Login</a>;\r\n    }\r\n\r\n    return (\r\n    <header className=\"masthead\">\r\n        <div className=\"container\">\r\n        <div className=\"intro-text\">\r\n            <div className=\"intro-lead-in\">Welcome To Our Caro WebGame!</div>\r\n            <div className=\"intro-heading text-uppercase\">It&#39;s Nice To Meet You</div>\r\n            { element } \r\n        </div>\r\n        </div>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Login from '../containers/Login';\r\nimport Register from '../containers/Register';\r\nimport Game from '../containers/Game';\r\nimport NavBar from './NavBar';\r\nimport Home from './Home';\r\n\r\nconst Root = (props) => {\r\n    const { isAuthenticated, account, username, email, logout} = props;\r\n    return (\r\n        <>\r\n            <NavBar isAuthenticated={isAuthenticated}\r\n                    account={account}\r\n                    username={username}\r\n                    email={email}\r\n                    logout={logout}/>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/user/login\">\r\n                        <Login isAuthenticated={isAuthenticated}/>\r\n                    </Route>\r\n                    <Route path='/user/register'>\r\n                        <Register isAuthenticated={isAuthenticated}/>    \r\n                    </Route>\r\n                    <Route path=\"/game\" component={Game}/>\r\n                    <Route path=\"/\">\r\n                        <Home isAuthenticated={isAuthenticated}/>\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Root;","import { connect } from 'react-redux';\r\nimport UserAction from '../actions/UserAction';\r\nimport Root from '../components/Root';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.UserReducer.isAuthenticated,\r\n        account: state.UserReducer.account,\r\n        username: state.UserReducer.username,\r\n        email: state.UserReducer.email\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logout: () => dispatch(UserAction.logout())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);","/* eslint-disable no-undef */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Store from './store';\nimport Root from './containers/Root';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={Store}>\n        <Root/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}